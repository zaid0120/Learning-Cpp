compiling source code the cpp compiler sequentially goes through each file in you program with 2 important tasks

finding any errors or bugs (shows line #) in your code by making sure you are following the rules of the cpp language the compilation process will be aborted until the error is fixed

the compiler will translate your code to machine lang instructions. These instructions are stored in an intermediate file called an obkect file. The object file also contains other data that is required or useful in subsequent steps

after compiling another program called the linker starts. The linkers job is to combine all the obj files and produce the output file like an executable to run this is called linking

1st the linker reads in each of the object files generated by the compiler and makes sure they are valid

2nd the linker ensures all cross file dependencies are resolved properly (E.G if you define something in one .cpp file and then use it in a diff .cpp file the linker connects the two if the linker is unable to connect a reference to something with its definition youll get linker error and linking will abort.

3rd the linker is also capable of linking library files a collection of precompiled code that has been packaged for reuse inother projects

cpp comes with the standard library that many cpp users use almost everyday with stuff it handles such as input/output streaming called iostream
that would be a lot of work! Instead, you’d probably download a library that already knew how to do those things, and use that. We’ll talk about how to link in libraries (and create your own!) in the appendix.

build and testing and debugging


i know guys today was a lot of real heaavy just note taking some copying too yesterday i just kind of skipped these concepts to get the code going but these concepts are important for me

